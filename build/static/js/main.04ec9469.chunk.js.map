{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","required","placeholder","defaultValue","ref","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","_this$props$fish","onChange","deleteFish","Login","authenticate","error","color","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","errorHandler","_callee2","_context2","console","log","message","provider","authProvider","auth","signInWithPopup","then","catch","logout","_callee3","_context3","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","_this$props$details","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.04ec9469.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n    static propTypes = {\n        history: PropTypes.object\n    }\n    myInput = React.createRef();\n    goToStore = event => {\n        // 1. Stop the form from submitting\n        event.preventDefault();\n        // 2. get the text from that input\n        const storeName = this.myInput.current.value;\n        // 3.change the page to /store/whatever they entered\n        this.props.history.push(`/store/${storeName}`);\n    }\n    render() {\n        return (\n            <form\n                className=\"store-selector\"\n                onSubmit={this.goToStore}\n            >\n                <h2>Please Enter A Store</h2>\n                <input\n                    type=\"text\"\n                    required\n                    placeholder=\"Store Name\"\n                    defaultValue={getFunName()}\n                    ref={this.myInput}\n                />\n                <button type=\"submit\">Visit Store &rarr;</button>\n            </form>\n        )\n    }\n}\n\nexport default StorePicker;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// stateless component\nconst Header = props => (\n    <header className=\"top\">\n        <h1>\n            Catch\n            <span className=\"ofThe\">\n                <span className=\"of\">of</span>\n                <span className=\"the\">the</span>\n            </span>\n            Day\n        </h1>\n        <h3 className=\"tagline\">\n            <span>\n                { props.tagline }\n            </span>\n        </h3>\n    </header>\n);\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n};\n\nexport default Header;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        order: PropTypes.object,\n        removeFromOrder: PropTypes.func\n    }\n    renderOrder = (key) => {\n        // retrieve the fish\n        const fish = this.props.fishes[key];\n        // retrieve the number of items per fish in the order\n        const count = this.props.order[key];\n        // check if the fish is available\n        const isAvailable = fish && fish.status === 'available';\n        // Make sure the fish is loaded before we contine\n        const transitionOptions = {\n            classNames: \"order\",\n            key,\n            timeout: { enter: 500, exit: 500 }\n        };\n        if (!fish) return null;\n        if (!isAvailable) {\n            return (\n                <CSSTransition\n                    {...transitionOptions}\n                >\n                    <li key={key}>\n                        Sorry { fish ? fish.name : 'fish' } is no longer available\n                    </li>\n                </CSSTransition>\n            );\n        }\n        return (\n            <CSSTransition\n                {...transitionOptions}\n            >\n                <li key={key}>\n                    <span>\n                        <TransitionGroup\n                            component=\"span\"\n                            className=\"count\"\n                        >\n                            <CSSTransition\n                                {...transitionOptions}\n                            >\n                                <span>{count}</span>\n                            </CSSTransition>\n                        </TransitionGroup>\n                        lbs {fish.name}\n                        { formatPrice(count * fish.price) }\n                        <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n                    </span>\n                </li>\n            </CSSTransition>\n        );\n    }\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            // retrieve the fish\n            const fish = this.props.fishes[key];\n            // retrieve the number of items per fish in the order\n            const count = this.props.order[key];\n            // check if the fish is not deleted and it's still available\n            const isAvailable = fish && fish.status === 'available';\n            if (isAvailable) {\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal;\n        }, 0);\n        return (\n            <div className=\"order-wrap\">\n                <h2>\n                    Order\n                </h2>\n                <TransitionGroup\n                    component=\"ul\"\n                    className=\"order\"\n                >\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    Total:\n                    <strong> {formatPrice(total)}</strong>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Order;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n    static propTypes = {\n        addFish: PropTypes.func\n    }\n    createFish = event => {\n        // 1. stop the form from submitting\n        event.preventDefault();\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value\n        };\n        this.props.addFish(fish);\n        // refresh the form\n        event.currentTarget.reset();\n    }\n    render() {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n                <select name=\"status\" ref={this.statusRef}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\"></textarea>\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n                <button type=\"submit\">+ Add Fish</button>\n            </form>\n        );\n    }\n}\n\nexport default AddFishForm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends Component {\n    static propTypes = {\n        fish: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            price: PropTypes.number,\n            desc: PropTypes.string,\n            status: PropTypes.string\n        }),\n        index: PropTypes.string,\n        updateFish: PropTypes.func\n    }\n    handleChange = event => {\n        // update that fish\n        // 1. take a copy of the current fish\n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value\n        };\n        this.props.updateFish(this.props.index, updatedFish);\n    }\n    render() {\n        const {\n            name,\n            price,\n            status,\n            desc,\n            image\n        } = this.props.fish;\n        return (\n            <div className=\"fish-edit\">\n                <input\n                    name=\"name\"\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    value={name}\n                    placeholder=\"Name\"\n                />\n                <input\n                    name=\"price\"\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    value={price}\n                    placeholder=\"Price\"\n                />\n                <select name=\"status\" value={status} onChange={this.handleChange}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea\n                    name=\"desc\"\n                    onChange={this.handleChange}\n                    value={desc}\n                    placeholder=\"Desc\"\n                ></textarea>\n                <input\n                    name=\"image\"\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    value={image}\n                    placeholder=\"Image\"\n                />\n                <button onClick={() => this.props.deleteFish(this.props.index)}>\n                    Remove Fish\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => {\n    return (\n        <nav className=\"login\">\n            <h2>\n                Inventory Login\n            </h2>\n            <p>\n                Sign in to manage your store's inventory.\n            </p>\n            <button\n                className=\"github\"\n                onClick={() => props.authenticate(\"Github\")}\n            >\n                Log In With Github\n            </button>\n            <button\n                className=\"facebook\"\n                onClick={() => props.authenticate(\"Facebook\")}\n            >\n                Log In With Facebook\n            </button>\n            <button\n                className=\"google\"\n                onClick={() => props.authenticate(\"Google\")}\n            >\n                Log In With Google\n            </button>\n            {\n                props.error && (\n                    <p style={{ color: 'red' }}>\n                        {props.error}\n                    </p>\n                )\n            }\n        </nav>\n    );\n};\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired,\n    error: PropTypes.string\n}\n\nexport default Login;","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyBqbST63BVZ3o9M1z7f_RTtvo7MiQyxo60\",\n    authDomain: \"catch-of-the-day-simone-taeggi.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-simone-taeggi.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named Export\nexport { firebaseApp };\n\n// This is the default export\nexport default base;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\n\nclass Inventory extends Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        addFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func\n    }\n    state = {\n        uid: null,\n        owner: null,\n        error: null\n    }\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.authHandler({ user });\n            }\n        });\n    }\n    authHandler = async (authData) => {\n        // 1. Look up the current store in the Firebase DB\n        const store = await base.fetch(this.props.storeId, { context: this });\n        // 2. Claim if there is no owner\n        if (!store.owner) {\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            });\n        }\n        // 3. Set the State of the inventory component to reflect the current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid,\n            error: null\n        });\n    }\n    errorHandler = async(error) => {\n        console.log(\"Then\", error);\n        this.setState({\n            error: error.message\n        });\n    }\n    authenticate = provider => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp\n            .auth()\n            .signInWithPopup(authProvider)\n            .then(this.authHandler)\n            .catch(this.errorHandler);\n    }\n    logout = async () => {\n        console.log('Logging out!');\n        await firebase.auth().signOut();\n        this.setState({ uid: null, error: null });\n    }\n    render() {\n        const logout = <button onClick={this.logout}>Log Out!</button>;\n        // 1. Check if they are not logged in\n        if (!this.state.uid) {\n            return <Login authenticate={this.authenticate} error={this.state.error} />;\n        }\n        // 2. Check if they are not the owner of the store\n        if (this.state.uid !== this.state.owner) {\n            return (\n                <div>\n                    <p>\n                        Sorry you are not the owner!\n                    </p>\n                    {logout}\n                </div>\n            );\n        }\n        // 3. They must be the owner, just render the inventory\n        return (\n            <div className=\"inventory\">\n                <h2>\n                    Inventory\n                </h2>\n                { logout }\n                { Object.keys(this.props.fishes).map( key =>  (\n                    <EditFishForm\n                        fish={this.props.fishes[key]}\n                        key={key}\n                        index={key}\n                        updateFish={this.props.updateFish}\n                        deleteFish={this.props.deleteFish}\n                    />)\n                ) }\n                <AddFishForm addFish={this.props.addFish} />\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n            </div>\n        );\n    }\n}\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            price: PropTypes.number,\n            desc: PropTypes.string,\n            status: PropTypes.string\n        }),\n        addToOrder: PropTypes.func\n    }\n    render() {\n        const {\n            image,\n            name,\n            price,\n            desc,\n            status\n        } = this.props.details;\n        const isAvailable = status === 'available';\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name} />\n                <h3 className=\"fish-name\">\n                    {name}\n                    <span className=\"price\">\n                        {formatPrice(price)}\n                    </span>\n                </h3>\n                <p>\n                    {desc}\n                </p>\n                <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>{ isAvailable ? 'Add To Cart' : 'Sold out!' }</button>\n            </li>\n        );\n    }\n}\n\nexport default Fish;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends Component {\n    state = {\n        fishes: {},\n        order: {}\n    };\n    static propTypes = {\n        match: PropTypes.object\n    }\n    componentDidMount() {\n        const { params } = this.props.match;\n        // first reinstate our localStorage\n        const localStorageRef = localStorage.getItem(params.storeId);\n        if (localStorageRef) {\n            this.setState({\n                order: JSON.parse(localStorageRef)\n            });\n        }\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: 'fishes'\n        });\n    }\n    componentDidUpdate() {\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n    addFish = fish => {\n        // 1. Take a copy of the existing state\n        const fishes = { ...this.state.fishes };\n        // 2. Add our new fish to that fishes variable\n        fishes[`fish${Date.now()}`] = fish;\n        // 3. Set the new fishes object to state\n        this.setState({\n            fishes\n        });\n    };\n    updateFish = (key, updatedFish) => {\n        // 1. Take a copy of the current state\n        const fishes = { ...this.state.fishes };\n        // 2. Update that state\n        fishes[key] = updatedFish\n        // 3. Set the new fishes state\n        this.setState({\n            fishes\n        });\n    }\n\n    deleteFish = (key) => {\n        // 1. take a copy of the current state\n        const fishes = { ...this.state.fishes };\n        // 2. remove one item from the state\n        fishes[key] = null;\n        // 3. update state\n        this.setState({\n            fishes\n        });\n    }\n\n    loadSampleFishes = () => {\n        this.setState({\n            fishes: sampleFishes\n        });\n    }\n    addToOrder = key => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. Either add to the order, or update the number in our order\n        order[key] = order[key] + 1 || 1;\n        // 3. Call setState to update our state object\n        this.setState({\n            order\n        });\n    }\n    removeFromOrder = key => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. Remove that item from order\n        delete order[key];\n        // 3. Call setState to update our state object\n        this.setState({\n            order\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header\n                        tagline=\"Fresh Seafood Market\"\n                    />\n                    <ul className=\"fishes\">\n                        { Object.keys(this.state.fishes).map( key => (\n                            <Fish\n                                key={key}\n                                index={key}\n                                details={this.state.fishes[key]}\n                                addToOrder={this.addToOrder}\n                            />\n                        )) }\n                    </ul>\n                </div>\n                <Order\n                    fishes={this.state.fishes}\n                    order={this.state.order}\n                    removeFromOrder={this.removeFromOrder}\n                />\n                <Inventory\n                    addFish={this.addFish}\n                    fishes={this.state.fishes}\n                    loadSampleFishes={this.loadSampleFishes}\n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish}\n                    storeId={this.props.match.params.storeId}\n                 />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => {\n    return (\n        <h2>\n            Not Found!1111!\n        </h2>\n    );\n};\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route\n                exact\n                path=\"/\"\n                component={StorePicker}\n            />\n            <Route\n                path=\"/store/:storeId\"\n                component={App}\n            />\n            <Route\n                component={NotFound}\n            />\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\n\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}